```mermaid
flowchart TD
    A[Project Root]
    A --> B[.git/ (exists)]
    A --> C[venv/ (exists, Python virtualenv)]
    A --> D[node_modules/ (exists, Node.js deps)]
    A --> E[scripts/ (exists)]
    E --> E1[prd.txt]
    E --> E2[README.md]
    E --> E3[example_prd.txt]
    E --> E4[dev.js]
    A --> F[tasks/ (exists)]
    F --> F1[tasks.json]
    F --> F2[task_001.txt ... task_010.txt]
    A --> G[.cursor/ (exists)]
    G --> G1[rules/]
    G1 --> G1a[playwright.mdc]
    G1 --> G1b[context7-rules.mdc]
    G1 --> G1c[cursor-rules.mdc]
    G1 --> G1d[dev-workflow.mdc]
    G1 --> G1e[self-improve.mdc]
    G1 --> G1f[taskmaster.mdc]
    G --> G2[mcp.json]
    A --> H[frontend/ (proposed)]
    H --> H1[README.md (proposed)]
    H --> H2[.env (proposed)]
    H --> H3[src/ (proposed)]
    A --> I[microservices/ (proposed)]
    I --> I1[README.md (proposed)]
    I --> I2[.env (proposed)]
    I --> I3[todo/ (proposed)]
    I3 --> I3a[README.md (proposed)]
    I3 --> I3b[main.py (proposed)]
    I3 --> I3c[tests/ (proposed)]
    I --> I4[database/ (proposed)]
    I4 --> I4a[README.md (proposed)]
    I4 --> I4b[main.py (proposed)]
    I4 --> I4c[tests/ (proposed)]
    I --> I5[event_handler/ (proposed)]
    I5 --> I5a[README.md (proposed)]
    I5 --> I5b[main.py (proposed)]
    I5 --> I5c[tests/ (proposed)]
    A --> J[shared/ (proposed)]
    J --> J1[README.md (proposed)]
    J --> J2[utils.py (proposed)]
    A --> K[package.json (exists)]
    A --> L[package-lock.json (exists)]
    A --> M[.gitignore (exists)]
    A --> N[README.md (exists)]
    %% Existing folders: .git, venv, node_modules, scripts, tasks, .cursor
    %% Proposed: frontend, microservices, shared
``` 